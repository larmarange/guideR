% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_multiple_choice.R
\name{plot_multiple_choice}
\alias{plot_multiple_choice}
\title{Plot a multiple choice question}
\usage{
plot_multiple_choice(
  data,
  items = dplyr::everything(),
  value = NULL,
  drop_na = FALSE,
  sort = c("none", "ascending", "descending"),
  geom = "bar",
  ...,
  show_ci = TRUE,
  conf_level = 0.95,
  ci_color = "black",
  show_labels = TRUE,
  labels_labeller = scales::label_percent(1),
  labels_size = 3.5,
  labels_color = "black",
  flip = FALSE,
  return_data = FALSE
)
}
\arguments{
\item{data}{A data frame, data frame extension (e.g. a tibble),
or a survey design object.}

\item{items}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> List of variables
identifying the different items of the multiple choice question.}

\item{value}{Value indicating a positive answer. By default, will use the
maximum observed value and will display a message.}

\item{drop_na}{Should any observation with a least one \code{NA} value be dropped?}

\item{sort}{Should items be sorted according to the proportion of positive
answers?}

\item{geom}{Geometry to use for plotting proportions (\code{"bar"} by default).}

\item{...}{Additional arguments passed to the geom defined by \code{geom}.}

\item{show_ci}{Display confidence intervals?}

\item{conf_level}{Confidence level for the confidence intervals.}

\item{ci_color}{Color of the error bars representing confidence intervals.}

\item{show_labels}{Display proportion labels?}

\item{labels_labeller}{Labeller function for proportion labels.}

\item{labels_size}{Size of proportion labels.}

\item{labels_color}{Color of proportion labels.}

\item{flip}{Flip x and y axis?}

\item{return_data}{Return computed data instead of the plot?}
}
\description{
Considering a multiple choice question coded as several binary variables (one
per item), plot the proportion of positive answers of each item.
See \code{\link[=proportion]{proportion()}} for more details on the way proportions and
confidence intervals are computed. By default, return a bar plot, but other
geometries could be used (see examples).
}
\examples{
d <-
  dplyr::tibble(
    q1a = sample(c("y", "n"), size = 200, replace = TRUE),
    q1b = sample(c("y", "n", "n", NA), size = 200, replace = TRUE),
    q1c = sample(c("y", "y", "n"), size = 200, replace = TRUE),
    q1d = sample("n", size = 200, replace = TRUE)
  )

d |> plot_multiple_choice(q1a:q1c)

d |>
  labelled::set_variable_labels(
    q1a = "apple",
    q1b = "banana",
    q1c = "chocolate",
    q1d = "Dijon mustard"
  ) |>
  plot_multiple_choice(
    value = "y",
    drop_na = TRUE,
    sort = "d",
    fill = "lightblue",
    flip = TRUE
  )
}
\keyword{univar}
